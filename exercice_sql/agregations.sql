USE SAKILA;

# Afficher le nombre de films dans les quels à joué l'acteur « JOHNNY LOLLOBRIGIDA », regroupé par catégorie
SELECT
FIRST_NAME FN
, LAST_NAME LN
, NAME
, COUNT(NAME) NB_FILM
FROM FILM F
JOIN FILM_CATEGORY FC ON FC.FILM_ID = F.FILM_ID
JOIN FILM_ACTOR FA ON F.FILM_ID = FA.FILM_ID
JOIN ACTOR A ON FA.ACTOR_ID = A.ACTOR_ID
JOIN CATEGORY C ON FC.CATEGORY_ID = C.CATEGORY_ID
WHERE LAST_NAME LIKE "LOLLOBRIGIDA" AND FIRST_NAME LIKE "JOHNNY"
GROUP BY NAME, FIRST_NAME, LAST_NAME;

# Ecrire la requête qui affiche les catégories dans les quels « JOHNNY LOLLOBRIGIDA » totalise plus de 3 films

SELECT
FIRST_NAME FN
, LAST_NAME LN
,NAME
, COUNT(NAME) NB_FILM
FROM FILM F
JOIN FILM_CATEGORY FC ON FC.FILM_ID = F.FILM_ID
JOIN FILM_ACTOR FA ON F.FILM_ID = FA.FILM_ID
JOIN ACTOR A ON FA.ACTOR_ID = A.ACTOR_ID
JOIN CATEGORY C ON FC.CATEGORY_ID = C.CATEGORY_ID
WHERE LAST_NAME LIKE "LOLLOBRIGIDA" AND FIRST_NAME LIKE "JOHNNY"
GROUP BY NAME, FIRST_NAME, LAST_NAME
HAVING NB_FILM > 3;

# Afficher la durée moyenne d'emprunt des films par acteurs

SELECT
FIRST_NAME FN
, LAST_NAME LN
, NAME CN
, AVG(DATEDIFF(RETURN_DATE,RENTAL_DATE)) MOYENNE
FROM FILM F
JOIN FILM_CATEGORY FC ON FC.FILM_ID = F.FILM_ID
JOIN FILM_ACTOR FA ON F.FILM_ID = FA.FILM_ID
JOIN ACTOR A ON FA.ACTOR_ID = A.ACTOR_ID
JOIN CATEGORY C ON FC.CATEGORY_ID = C.CATEGORY_ID
JOIN INVENTORY I ON F.FILM_ID = I.FILM_ID
JOIN RENTAL R ON I.INVENTORY_ID = R.INVENTORY_ID
GROUP BY CN, FIRST_NAME, LAST_NAME;

# L'argent total dépensé au vidéos club par chaque clients, classé par ordre décroissant

SELECT
SUM(rental_rate) ARGENT_DEPENSE
, FIRST_NAME
,LAST_NAME
FROM CUSTOMER C
JOIN PAYMENT P ON C.CUSTOMER_ID = P.CUSTOMER_ID
JOIN RENTAL R ON P.RENTAL_ID = R.RENTAL_ID
JOIN INVENTORY I ON R.INVENTORY_ID = I.INVENTORY_ID
JOIN FILM F ON I.FILM_ID = F.FILM_ID
GROUP BY FIRST_NAME, LAST_NAME 
ORDER BY ARGENT_DEPENSE DESC;